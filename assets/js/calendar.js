/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/client/js/calendar.js":
/*!***********************************!*\
  !*** ./src/client/js/calendar.js ***!
  \***********************************/
/***/ (() => {

eval("function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n(function () {\n  var date = new Date();\n  var MINI_WINDOW_CLASSNAME = 'mini-window';\n\n  var renderCalendar = function renderCalendar() {\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var preLast = new Date(year, month - 1, 0); // 지난달 마지막 날\n\n    var thisLast = new Date(year, month, 0); // 이번달 마지막 날\n\n    var PLDate = preLast.getDate();\n    var PLDay = preLast.getDay();\n    var TLDate = thisLast.getDate();\n    var TLDay = thisLast.getDay();\n    var preDates = [];\n\n    var thisDates = _toConsumableArray(Array(TLDate + 1).keys()).slice(1);\n\n    var nextDates = [];\n\n    if (PLDay !== 6) {\n      // 저번달 마지막날이 토요일이면 필요없음\n      for (var i = 0; i <= PLDay; i++) {\n        preDates.unshift(PLDate - i);\n      }\n    }\n\n    var rowCount = TLDate === 31 && (PLDay === 4 || PLDay === 5) || TLDate === 30 && PLDay === 5 ? 7 : 14;\n\n    for (var _i = 1; _i < rowCount - TLDay; _i++) {\n      nextDates.push(_i);\n    }\n\n    var dates = preDates.concat(thisDates, nextDates);\n    var firstDateIndex = dates.indexOf(1);\n    var lastDateIndex = dates.indexOf(TLDate) > 10 ? dates.indexOf(TLDate) : dates.lastIndexOf(TLDate);\n    dates.forEach(function (date, i) {\n      var condition = i >= firstDateIndex && i <= lastDateIndex ? 'this' : 'other';\n      dates[i] = \"<div class=\\\"calendar__date\\\"><div class=\".concat(condition, \">\").concat(date, \"</div></div>\");\n    });\n    document.querySelector('.calendar__dates').innerHTML = dates.join('');\n    document.querySelector('.calendar__year-month').innerText = \"\".concat(year, \"\\uB144 \").concat(month, \"\\uC6D4\"); // 오늘 날짜 그리기\n\n    var today = new Date();\n    var todayDate = today.getDate();\n\n    if (year === today.getFullYear() && month === today.getMonth() + 1) {\n      var _iterator = _createForOfIteratorHelper(document.querySelectorAll('.this')),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _date = _step.value;\n\n          if (+_date.innerText === todayDate) {\n            _date.classList.add('today');\n\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  };\n\n  var filter = function filter(contests, contestfilter) {\n    var possibleContests = [];\n\n    var _iterator2 = _createForOfIteratorHelper(contests),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var contest = _step2.value;\n        var contestPossible = false; // 대회 전체 가능 여부 (테스트를 하나라도 통과하면 true로 바뀜)\n\n        var title = contest.title,\n            link = contest.link,\n            dates = contest.dates,\n            sections = contest.sections;\n        var contestObj = {};\n        var sectionList = [];\n\n        var _iterator3 = _createForOfIteratorHelper(sections),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var section = _step3.value;\n            var sectionPossible = true; // 각 부문별 가능 여부 (테스트를 하나라도 탈락하면 false로 바뀜)\n\n            var RT = section.requirementTypes;\n            var RV = section.requirementValues;\n            var RO = section.requirementOr;\n            var ET = section.excludeTypes;\n            var EV = section.excludeValues;\n            var EA = section.excludeAnd;\n\n            for (var i in RT) {\n              if (RT[i] && contestfilter[RT[i]] !== RV[i]) {\n                // 필수 조건 (값에 해당되지 않으면 제외)\n                sectionPossible = false;\n                break;\n              }\n\n              if (ET[i] && contestfilter[ET[i] === EV[i]]) {\n                // 제외 조건 (값에 해당되면 제외)\n                sectionPossible = false;\n                break;\n              }\n            }\n\n            if (RO.length) {\n              // 필수 조건(or) (2개의 값 중 하나라도 true면 통과)\n              for (var _i2 in RO) {\n                var extraPossible = 0;\n\n                for (var key in RO[_i2]) {\n                  // 2번 반복\n                  if (key === 'age-over') {\n                    extraPossible += contestfilter.age <= RO[_i2][key]; // 2002년생 기준일 때 2002년생까지 통과\n                  } else if (key === 'age-under') {\n                    extraPossible += contestfilter.age > RO[_i2][key];\n                  } else {\n                    extraPossible += contestfilter.age === RO[_i2][key];\n                  }\n                }\n\n                if (!extraPossible) {\n                  sectionPossible = false;\n                  break;\n                }\n              }\n            }\n\n            if (EA.length) {\n              // 제외 조건(and) (2개의 값 모두 일치하면 제외)\n              for (var _i3 in EA) {\n                var _extraPossible = 0;\n\n                for (var _key in EA[_i3]) {\n                  // 2번 반복\n                  if (_key === 'age-over') {\n                    _extraPossible += contestfilter.age > EA[_i3][_key]; // 2002년생 기준일 때 2002년 생이면 탈락 2003년 생이면 통과\n                  } else if (_key === 'age-under') {\n                    _extraPossible += contestfilter.age <= EA[_i3][_key];\n                  } else {\n                    _extraPossible += contestfilter.age !== EA[_i3][_key];\n                  }\n                }\n\n                if (!_extraPossible) {\n                  sectionPossible = false;\n                  break;\n                }\n              }\n            }\n\n            if (sectionPossible === true) {\n              contestPossible = true;\n              sectionList.push(section.sectionName);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        if (contestPossible === true) {\n          possibleContests.push({\n            title: title,\n            link: link,\n            dates: dates,\n            sections: sectionList\n          });\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return possibleContests;\n  };\n\n  var renderContest = function renderContest(contests, contestfilter) {\n    // 날짜별로 id 추가\n    var yearMonth = document.querySelector('.calendar__year-month').innerText;\n    var year = Number(yearMonth.slice(0, 4));\n    var month = Number(yearMonth.length === 9 ? yearMonth.slice(-3, yearMonth.length - 1) : yearMonth.slice(-2, yearMonth.length - 1));\n    var dateCells = document.querySelectorAll('.calendar__date');\n\n    var _iterator4 = _createForOfIteratorHelper(dateCells),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var dateCell = _step4.value;\n        dateCell.innerHTML += \"<div class='calendar__contest'></div>\";\n\n        var _date2 = dateCell.innerText.padStart(2, '0');\n\n        if (dateCell.querySelector('.this')) {\n          dateCell.id = \"\".concat(year).concat(month).concat(_date2);\n        } else {\n          if (_date2 > 15) {\n            month === 1 ? dateCell.id = \"\".concat(year - 1).concat(month + 11).concat(_date2) : dateCell.id = \"\".concat(year).concat(month - 1).concat(_date2);\n          } else {\n            month === 12 ? dateCell.id = \"\".concat(year + 1).concat(month - 11).concat(_date2) : dateCell.id = \"\".concat(year).concat(month + 1).concat(_date2);\n          }\n        }\n      } // 해당되는 날짜에 대회 추가\n\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    var possibleContests = filter(contests, contestfilter);\n\n    var _iterator5 = _createForOfIteratorHelper(contests),\n        _step5;\n\n    try {\n      var _loop = function _loop() {\n        var contest = _step5.value;\n        var title = contest.title,\n            link = contest.link,\n            dates = contest.dates,\n            sections = contest.sections;\n        var viewSectionNames = '';\n\n        var _iterator6 = _createForOfIteratorHelper(sections),\n            _step6;\n\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var section = _step6.value;\n            viewSectionNames += \"<span>\".concat(section.sectionName, \"</span>\");\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n\n        var _iterator7 = _createForOfIteratorHelper(dates),\n            _step7;\n\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var d = _step7.value;\n            var contestDate = d.split('-');\n            contestDate = contestDate[0] + contestDate[1] + contestDate[2].slice(0, 2);\n\n            var _iterator8 = _createForOfIteratorHelper(dateCells),\n                _step8;\n\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var _dateCell = _step8.value;\n\n                if (_dateCell.id === contestDate) {\n                  (function () {\n                    var contestBox = _dateCell.querySelector('.calendar__contest');\n\n                    contestBox.innerText = title;\n\n                    _dateCell.addEventListener('mouseenter', function () {\n                      contestBox.classList.add(MINI_WINDOW_CLASSNAME);\n                      contestBox.innerHTML = \"<span>\".concat(title, \"</span><span><\\uCD94\\uCC9C></span>\").concat(viewSectionNames, \"<a href=\").concat(link, \">\").concat(link, \"</span>\");\n                    });\n\n                    _dateCell.addEventListener('mouseleave', function () {\n                      contestBox.classList.remove(MINI_WINDOW_CLASSNAME);\n                      contestBox.innerHTML = title;\n                    });\n                  })();\n                }\n              }\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n      };\n\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n  };\n\n  var toPreMonth = function toPreMonth() {\n    date.setDate(1);\n    date.setMonth(date.getMonth() - 1);\n    renderCalendar();\n    renderContest(contests, contestfilter);\n  };\n\n  var toNextMonth = function toNextMonth() {\n    date.setDate(1);\n    date.setMonth(date.getMonth() + 1);\n    renderCalendar();\n    renderContest(contests, contestfilter);\n  };\n\n  var thisMonth = function thisMonth() {\n    date = new Date();\n    renderCalendar();\n    renderContest(contests, contestfilter);\n  };\n\n  var preMonthBtn = document.querySelector('.go-pre');\n  var nextMonthBtn = document.querySelector('.go-next');\n  var calendar = document.querySelector('.calendar');\n  var contests = calendar.dataset.contests ? JSON.parse(calendar.dataset.contests) : undefined;\n  var contestfilter = calendar.dataset.contestfilter ? JSON.parse(calendar.dataset.contestfilter) : undefined;\n  renderCalendar();\n\n  if (contests && contestfilter) {\n    renderContest(contests, contestfilter);\n  }\n\n  preMonthBtn.addEventListener('click', toPreMonth);\n  nextMonthBtn.addEventListener('click', toNextMonth);\n})();\n\n//# sourceURL=webpack://baduk-platform/./src/client/js/calendar.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/client/js/calendar.js"]();
/******/ 	
/******/ })()
;