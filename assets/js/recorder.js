/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/client/js/recorder.js":
/*!***********************************!*\
  !*** ./src/client/js/recorder.js ***!
  \***********************************/
/***/ (() => {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar startBtn = document.querySelector('.record-btn');\nvar video = document.getElementById('preview');\nvar stream;\nvar recorder;\nvar videoFile;\n\nvar downloadRecording = function downloadRecording() {\n  var a = document.createElement('a');\n  a.href = videoFile;\n  a.download = 'MyRecording.webm';\n  document.body.appendChild(a);\n  a.click();\n};\n\nvar stopRecording = function stopRecording() {\n  startBtn.innerText = 'Download Recording';\n  startBtn.removeEventListener('click', stopRecording);\n  startBtn.addEventListener('click', downloadRecording);\n  recorder.stop();\n};\n\nvar startRecording = function startRecording() {\n  startBtn.innerText = 'Stop Recording';\n  startBtn.removeEventListener('click', startRecording);\n  startBtn.addEventListener('click', stopRecording);\n  recorder = new MediaRecorder(stream);\n  console.log(recorder);\n\n  recorder.ondataavailable = function (event) {\n    videoFile = URL.createObjectURL(event.data);\n    video.srcObject = null;\n    video.src = videoFile;\n    video.loop = true;\n    video.play();\n  };\n\n  recorder.start();\n};\n\nvar init = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return navigator.mediaDevices.getUserMedia({\n              audio: false,\n              video: {\n                width: 200,\n                height: 100\n              }\n            });\n\n          case 2:\n            stream = _context.sent;\n            video.srcObject = stream;\n            video.play();\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function init() {\n    return _ref.apply(this, arguments);\n  };\n}(); // init()\n\n\nstartBtn.addEventListener('click', startRecording); //-------------------------------------------------------------------------------\n\nvar audioStartBtn = document.querySelector('.audio-record-btn');\nvar audio = document.getElementById('audio-preview');\nvar audioStream;\nvar audioRecorder;\nvar audioFile;\n\nvar downloadAudioRecording = function downloadAudioRecording() {\n  var a = document.createElement('a');\n  a.href = audioFile;\n  a.download = 'MyRecording.mp3';\n  document.body.appendChild(a);\n  a.click();\n};\n\nvar stopAudioRecording = function stopAudioRecording() {\n  audioStartBtn.innerText = 'Download Recording';\n  audioStartBtn.removeEventListener('click', stopAudioRecording);\n  audioStartBtn.addEventListener('click', downloadAudioRecording);\n  audioRecorder.stop();\n};\n\nvar startAudioRecording = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            audioStartBtn.innerText = 'Stop Recording';\n            audioStartBtn.removeEventListener('click', startAudioRecording);\n            audioStartBtn.addEventListener('click', stopAudioRecording);\n            _context2.next = 5;\n            return navigator.mediaDevices.getUserMedia({\n              audio: true,\n              video: false\n            });\n\n          case 5:\n            audioStream = _context2.sent;\n            audio.srcObject = audioStream;\n            audioRecorder = new MediaRecorder(audioStream);\n\n            audioRecorder.ondataavailable = function (event) {\n              audioFile = URL.createObjectURL(event.data);\n              audio.srcObject = null;\n              audio.src = audioFile;\n            };\n\n            audioRecorder.start();\n            setTimeout(function () {\n              if (audioRecorder.state === 'recording') {\n                audioStartBtn.click();\n              }\n            }, 5000);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function startAudioRecording() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\naudioStartBtn.addEventListener('click', startAudioRecording);\n\n//# sourceURL=webpack://baduk-platform/./src/client/js/recorder.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/client/js/recorder.js"]();
/******/ 	
/******/ })()
;